ARRAYS:
1.Read the number of rows and columns of a 2D array from the user.
Read the elements of the 2D array from the user.
Display the 2D array in matrix form.

import java.util.Scanner;

public class allsame {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int row=sc.nextInt();
		int col=sc.nextInt();
		int arr[][]=new int[row][col];
		for(int i=0;i<row;i++) {
			for(int j=0;j<col;j++) {
			arr[i][j]=sc.nextInt();
		}
	}
		 for(int i=0;i<row;i++)     
         {
             for(int j=0;j<col;j++)
             {
                  System.out.print(arr[i][j]+" ");
             }
            System.out.println("");
            sc.close();
        }
		 
	}
}

2.Write a Java program to store the scores of 11 cricket players and display:
The number of players who scored a century (≥100 runs).
The number of players who scored a half-century (50–99 runs).
The number of players who got out for a duck (0 runs).

import java.util.Scanner;

public class Cricket {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int scores[]=new int[11];
		for(int i=0;i<11;i++) {
			scores[i]=sc.nextInt();
		}
		int centuries=0;
		int halfcenturies=0;
		int duckout=0; {
			for(int i=0;i<11;i++)
			{
			if(scores[i]>=100) 
				centuries++;
			else if(scores[i]>=50&&scores[i]<100)
				halfcenturies++;
	    	else if(scores[i]==0) {
				duckout++;
	   	}
			System.out.println("centuries: "+centuries);
			System.out.println("halfcenturies: "+halfcenturies);
			if(duckout!=0)
			System.out.println("duckout: "+duckout);
			sc.close();
		}
	}
}
}

3.Write a program to find whether the matrix is diagonal or not
import java.util.Scanner;
public class diagonals {

	public static void main(String[] args) {
		Scanner obj = new Scanner (System.in);
		int row=obj.nextInt();
		int cols=obj.nextInt();
	    if(row==cols) {
		  int arr[][]=new int[row][cols];
		  for(int i = 0; i<row;i++) {
		  for (int j=0;j<cols;j++) {
		   arr[i][j]=obj.nextInt();
			  }
		  }
		  int left=0;
		  int right=0;
				  for(int i=0;i<row;i++) {
					  for(int j=0;j<cols;j++) {
						  if(i==j) {
							  left=left+arr[i][j];
						  }
						  if(i+j==row-1) {
							  right=right+arr[i][j];
						  }
					  }
				  }
				  if(left==right)
			          System.out.println("diagonal matrix");
			        else
			          System.out.println("not a diagonal matrix");
	  }
	    else{
	        System.out.println("not a diagonal matrix!!");
	        obj.close();
		}

	}
	}

4.Write a program to find whether the matrix is identity matrix or not

import java.util.Scanner;

public class identitymatrix {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int row=sc.nextInt();
		int col=sc.nextInt();
		int arr[][]=new int[row][col];
		 for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            if (i == j) {
                arr[i][j] = 1;
            } else {
                arr[i][j] = 0;
            }
        }
    }
    System.out.println("Identity Matrix:");
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            System.out.print(arr[i][j] + " ");
        }
        System.out.println();
        sc.close();
    }
	}
}

5.Write a program to find whether the matrix is a magic square

import java.util.Scanner;

public class Magicsq {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int arr[][]=new int[n][n];
		for(int i=0;i<n;i++) {
			for(int j=0;j<n;j++) {
			arr[i][j]=sc.nextInt();
			}
		}
		for(int i=0;i<n;i++)     
        {
            for(int j=0;j<n;j++)
            {
                 System.out.print(arr[i][j]+" ");
            }
           System.out.println("");
       }
		 int Diag1 = 0, Diag2 = 0;

	  
	        int Sum = 0;
	        for (int j = 0; j < n; j++) {
	            Sum =Sum+ arr[0][j];
	        }        
	        
	        for (int i = 0; i < n; i++) {
	            int rowsum = 0, colsum = 0;
	            for (int j = 0; j < n; j++) {
	                rowsum =rowsum+ arr[i][j];
	                colsum =colsum+ arr[j][i];
	            }
	            Diag1 += arr[i][i];
	            Diag2 += arr[i][n - i - 1];

	            if (rowsum != Sum || colsum != Sum) {
	                System.out.println("it is not a Magic Square");
	               
	            }
	        }

	       
	        if (Diag1 != Sum || Diag2 != Sum) {
	            System.out.println("it is NOT a Magic Square");
	        } else {
	            System.out.println("Magic Square");
	        
	        }
	        sc.close();
	    }
	}

6.Perform sum of elements in the matrix

import java.util.Scanner;
public class sumofelements {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int row=sc.nextInt();
		int col=sc.nextInt();
		int arr[][]=new int[row][col];
		for(int i=0;i<row;i++) {
			for(int j=0;j<col;j++)
			{
				arr[i][j]=sc.nextInt();
			}
		}
		 System.out.println();
	        System.out.println("INPUT MATRIX");
	        
	        for (int i = 0; i < row; i++) {
	            for (int j = 0; j < col; j++) {
	                System.out.print(arr[i][j] + " ");
	            }
	            System.out.println();
	        }
	        System.out.println();
	        
	        //Compute row-wise and sum of all elements
	        int sum = 0;
	        for (int i = 0; i < row; i++) {
	            int rSum = 0;
	            for (int j = 0; j < col; j++) {
	                sum += arr[i][j];
	                rSum += arr[i][j];
	            }
	            System.out.println("Row " + (i + 1) + " sum = " + rSum);
	        }
	        

	        for (int i = 0; i < col; i++) {
	            int cSum = 0;
	            for (int j = 0; j < row; j++) {
	                cSum += arr[j][i];
	            }
	            System.out.println("Column " + (i + 1) + " sum = " + cSum);
	        }
	        
	        System.out.println("Sum of all elements = " + sum);
	        sc.close();
	    }

	}
7.Write a java program to find the minimum in the column of an array
import java.util.Scanner;

public class mincol {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int row=sc.nextInt();
		int col=sc.nextInt();
		int arr[][]=new int[row][col];
		for(int i=0;i<row;i++) {
			for(int j=0;j<col;j++) {
			arr[i][j]=sc.nextInt();
		}
	}
		 for(int i=0;i<row;i++)     
         {
             for(int j=0;j<col;j++)
             {
                  System.out.print(arr[i][j]+" ");
             }
            System.out.println("");
        }
		System.out.println("Minimum element:");
			for(int j=0;j<col;j++) {
				int min=arr[0][j];
				{
					for(int i=1;i<row;i++) {
				if(arr[i][j]<min) {
					min=arr[i][j];
				}
			}
			System.out.println("col:"+min);
			sc.close();
		}
	}
	}
}

8.Write a java program to find the transpose of the matrix.

import java.util.Scanner;

public class transpose {

	public static void main(String[] args) {
		 Scanner s = new Scanner(System.in);
         int m,n;                          
         System.out.println("Enter the number of rows: \n");
         m=s.nextInt();  
         
         System.out.println("Enter the number of column: \n");
         n=s.nextInt();  
         
         int arr[][]=new int[m][n];        
         System.out.println("Enter the elements of the matrix: ");
         for(int i=0;i<m;i++)   
         {
            for(int j=0;j<n;j++)
            {
                 arr[i][j]=s.nextInt();
            }
         }
         
         System.out.println("The given matrix is: ");
         for(int i=0;i<m;i++)     
         {
             for(int j=0;j<n;j++)
             {
                  System.out.print(arr[i][j]+" ");
             }
            System.out.println("");
        }
        
        int arr2[][]=new int[n][m];        
        
        for(int i=0;i<n;i++)     
        {
             for(int j=0;j<m;j++)
             {
                 arr2[j][i]=arr[i][j];     
             }
        }
        
        System.out.println("The transpose matrix is:");
        for(int i=0;i<n;i++)     
        {
             for(int j=0;j<m;j++)
             {
                 System.out.print(arr2[i][j]+" ");
             }
            System.out.println("");
            s.close();
        }
         
     }
}

9.Write a java program to shift the elements in array.

import java.util.Scanner;
public class shift {

	public static void main(String[] args) {
		Scanner s=new Scanner(System.in);
		int size=s.nextInt(),temp;
		int arr[]=new int[size];
		for(int i=0;i<size;i++) {
			arr[i]=s.nextInt();
		}
		for(int i=0,j=size-1;i<j;i++,j--) {
			temp=arr[i];
			arr[i]=arr[j];
			arr[j]=temp;
		}
		for(int i=0;i<size;i++) {
		System.out.print(arr[i]+" ");
		s.close();
	}
} 

10.Reverse of an array

import java.util.Scanner;

public class Reverse {

	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	int size=sc.nextInt();
	int []arr=new int[size];
	for(int i=0;i<size;i++)
	{
		arr[i]=sc.nextInt();
	}
	for(int i=size-1;i>=0;i--) 
		if(arr[i]>0)
			arr[i]=arr[i]*(1);
		else if(arr[i]<0)
		arr[i]=arr[i]*(1);
		for(int i=size-1;i>=0;i--)
		System.out.print(arr[i]+" ");
	sc.close();
	}

}